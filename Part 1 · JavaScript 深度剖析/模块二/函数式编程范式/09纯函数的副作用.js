// 纯函数： 相同的输入始终得到相同的输出，且没有可观察到的 *副作用*

// 不纯的
let minAge = 18
function checkAge(age) {
  return age > minAge
}
// 此时的checkAge不是纯函数，因为minAge导致的副作用，最终导致相同的age输入可能因为全局变量的nimAge变化而变化，无法保证相同的输出

// 改造为纯函数
function checkAge(age) {
  let minAge = 18
  return age > minAge
}
// 此时因为minAge为局部变量，外部无法改变，故相同的输入可以保证相同的输出
// 但问题在于minAge是硬编码(写死)


// 副作用让一个函数变的不纯，纯函数根据相同输入始终返回相同输出，如果函数依赖外部状态则无法保证输出的相同，就会带来副作用

// 副作用的来源：配置文件/数据库/获取用户的输入/全局变量....等等

// 副作用带来的问题：
//  使得方式的通用性下降，不适合扩展和可重用性；
//  给程序来带安全隐患和不确定性。

// 副作用不可能完全禁止